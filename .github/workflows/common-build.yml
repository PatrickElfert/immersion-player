name: Common Build Workflow

on:
  workflow_call:
    inputs:
      platform-name:
        required: true
        type: string

jobs:
  build_and_test:
    runs-on: ${{ inputs.platform-name }}
    env:
      NX_SKIP_NX_CACHE: true
      PLATFORM: ${{ inputs.platform-name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install chromium

      - name: Download JmDict
        run: |
          wget -O jmdict-all.json.zip https://github.com/scriptin/jmdict-simplified/releases/download/3.5.0%2B20240826121924/jmdict-all-3.5.0+20240826121924.json.zip

      - name: Extract JMdict ZIP
        run: |
          unzip jmdict-all.json.zip

      - name: Run Unit Tests
        run: npx nx run-many --target=test

      - name: Build Electron App
        run: npm run make
        env:
          ELECTRON_ENABLE_LOGGING: true
          ELECTRON_ENABLE_STACK_DUMPING: true

      - name: Create Library folder
        run: mkdir -p $HOME/ImmersionPlayer

      - name: Copy Test folders
        run: cp -r "./assets/Example E01" "./assets/Example E02" "$HOME/ImmersionPlayer"
        shell: bash

      - name: Start Flashcard Preview Server and Test
        env:
          ELECTRON_ENABLE_LOGGING: true
          ELECTRON_ENABLE_STACK_DUMPING: true
        run: |
          export DEBUG=electron*
          npx start-server-and-test 'nx serve flashcard-preview --port 5000' http://localhost:5000 'nx run-many --target e2e --skip-nx-cache 2>&1 | tee electron-debug.log'

      - name: Upload crash logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: electron-logs
          path: |
            electron-debug.log
            $HOME/.config/Electron/Crash Reports/
            $HOME/Library/Logs/Electron/




